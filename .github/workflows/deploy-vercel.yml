name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}
      url: ${{ steps.deploy.outputs.preview-url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate

    - name: Run tests before deployment
      run: npm test -- --watchAll=false --coverage=false
      env:
        CI: true

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel environment information
      run: vercel pull --yes --environment=${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}

    - name: Build project artifacts
      run: vercel build ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy project artifacts to Vercel
      id: deploy
      run: |
        url=$(vercel deploy --prebuilt ${{ github.ref == 'refs/heads/main' && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }})
        echo "preview-url=$url" >> $GITHUB_OUTPUT
        echo "ðŸš€ Deployed to: $url"

    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const url = '${{ steps.deploy.outputs.preview-url }}';
          const comment = `## ðŸš€ Deployment Preview

          Your changes have been deployed to: ${url}

          ### What's included:
          - âœ… Cart customization features
          - âœ… Individual item display
          - âœ… 3MF file analysis
          - âœ… Stripe payment integration
          - âœ… Admin dashboard

          > Deployed from commit ${{ github.sha }}`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Update deployment status
      if: github.ref == 'refs/heads/main'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: context.payload.deployment?.id || 0,
            state: 'success',
            environment_url: '${{ steps.deploy.outputs.preview-url }}',
            description: 'Deployment successful'
          });